name: Enforcing pylint checks
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
    tags:
      - v*

jobs:
  update_python:
    runs-on: ubuntu-latest
    name: Running pylint checks
    steps:
      - name: install software-properties-common
        run: sudo apt-get install software-properties-common
      - name: add deadsnakes repository
        run: sudo add-apt-repository -y ppa:deadsnakes/ppa
      - name: add gdal repository
        run: sudo add-apt-repository ppa:ubuntugis/ppa
      - name: update apt-get
        run: sudo apt-get update
      - name: install gdal-deps
        run: sudo apt-get install -y gdal-bin libgdal-dev gcc g++
      - name: Install system requirements from source
        shell: bash
        run: '[ -s "packages.txt" ] && (cat packages.txt | xargs apt-get install -y --no-install-recommends) || (echo "No addtional packages to install")'
        id: install-system-reqs
      - name: install python3.7
        run: sudo apt-get install -y --no-install-recommends python3.7-dev python3-pip && sudo ln -sfn /usr/bin/python3.7 /usr/bin/python3
      - name: test python version
        run: python3 --version
      - name: find gdal version
        run: ogrinfo --version
      - name: Update pip
        run: python3 -m pip install --upgrade --no-cache-dir pip
        id: pip-install
      - name: Fetch/update setuptools
        run: python3 -m pip install --upgrade --no-cache-dir setuptools
        id: setuptools-install
      - name: install gdal
        run: python3 -m pip install --upgrade --no-cache-dir GDAL==2.4.2.*
      - name: numpy install
        run: python3 -m pip install --upgrade --no-cache-dir numpy
      - name: enum34 install
        run: python3 -m pip install --upgrade --no-cache-dir enum34
      - name: piexif install
        run: python3 -m pip install --upgrade --no-cache-dir piexif
      - name: pygdal install
        run: python3 -m pip install --upgrade --no-cache-dir pygdal==2.4.2.*
      - name: agpypeline install
        run: python3 -m pip install --upgrade --no-cache-dir agpypeline==0.0.33
      - name: Fetch/update pylint
        run: python3 -m pip install --upgrade --no-cache-dir pylint
        id: pylint-install
      - name: Fetch source code
        uses: actions/checkout@v2
        id: fetch-source
      - name: Finding files
        run: find . -type f -name "*.py" > action_pylint_files.txt
        id: find-python-files
      - name: Run action pylint script
        shell: bash
         run: '[ -s ".github/workflows/action_pylint.sh" ] && (chmod +x ".github/workflows/action_pylint.sh" && ./.github/workflows/action_pylint.sh) || (echo "Error running shell script")'
        id: run-special-action-script
      - name: Fetching pylint.rc file
        run: wget https://raw.githubusercontent.com/AgPipeline/Organization-info/master/pylint.rc
        id: fetch_pylint_resource
      - name: Listing
        run: ls -la
      - name: Files to lint
        run: cat action_pylint_files.txt
      - name: Running pylint
        run: cat action_pylint_files.txt | xargs python3 -m pylint --rcfile ./pylint.rc
